stages:
  - auto-deploy
  - manual-deploy

.deploy:
  stage: auto-deploy
  image: $ANSIBLE_IMAGE
  before_script:
    - export ANSIBLE_HOST_KEY_CHECKING=False
  # Запускаем ssh-agent
    - eval $(ssh-agent -s)
  # Создаём директорию для закрытого ключа
    - mkdir -p ~/.ssh
  # Выставляем права доступа для директории
    - chmod 700 ~/.ssh
  # Копируем закрытый ключ
    - cp $SSH_PRIVATE_KEY ~/.ssh/id_rsa
  # Выставляем права закрытому ключу
    - chmod 600 ~/.ssh/id_rsa
  # Передаём ключ ssh-aget'у
    - ssh-add ~/.ssh/id_rsa
    # Подключаемся к текущему репозиторию гитлаба 
    - git remote set-url origin https://$GIT_USER:$GIT_PASS@$PROJECT_URL
    # Задаём e-mail пользователя для дальнейших изменений
    - git config --global user.email "$GIT_EMAIL_USER"
    # Задаём имя пользователя для дальнейших изменений
    - git config --global user.name "$GIT_USER"
    # Обновляем сабмодуль, чтобы подтянуть новые изменения
    - git submodule update --init --recursive --remote
  script:
    - ansible-playbook -i $INVENTORIES $PATH_TO_SUBMODULE/ansible/$DOCKER_STATE.yml --tags "${ANSIBLE_TAG}"  --extra-vars "deploy_host=$VARIABLE_HOST deploy_image=$IMAGE_TAG deploy_registry_pass=$TOKEN_FOR_DEPLOY service_name=$CI_PROJECT_NAME path_to_artifacts=$PATH_TO_ARTIFACTS" -v


# Выполняем запрос на деплой
auto-deploy-develop:
  extends: .deploy
  only:
    - "develop"
  variables: 
    INVENTORIES: $PATH_TO_SUBMODULE/ansible/inventories/dev/hosts
    VARIABLE_HOST: $HOST_DEV

### Отключено по просьбе Пашутина В. ###
# auto-deploy-release:
#   extends: .deploy
#   only:    
#     - "/^release-\\w+/"
#   variables: 
#     INVENTORIES: $PATH_TO_SUBMODULE/ansible/inventories/test/hosts
#     VARIABLE_HOST: $HOST_TEST

# auto-deploy-release-2:
#   extends: .deploy
#   only:    
#     - "/^release-\\w+/"
#   variables: 
#     INVENTORIES: $PATH_TO_SUBMODULE/ansible/inventories/test/hosts
#     VARIABLE_HOST: $HOST_TEST2
### end ###


auto-deploy-master:
  extends: .deploy
  only:    
    - "master" # dockerless
  variables: 
    INVENTORIES: $PATH_TO_SUBMODULE/ansible/inventories/prom-stage/hosts
    VARIABLE_HOST: $HOST_PROM_STAGE
  script:
    - ansible-playbook -i $INVENTORIES $PATH_TO_SUBMODULE/ansible/dockerless.yml --tags "${ANSIBLE_TAG}"  --extra-vars "deploy_host=$VARIABLE_HOST deploy_image=$IMAGE_TAG deploy_registry_pass=$TOKEN_FOR_DEPLOY service_name=$CI_PROJECT_NAME path_to_artifacts=$PATH_TO_ARTIFACTS"

# Запускаем процесс вливания МР в релизную ветку
manual-deploy-release:
  stage: manual-deploy
  only:
    - "develop"
  before_script:
    # Устанавливаем необходимое ПО
    - apk add curl jq
    # Задаём переменные
    #  # Подключаемся к текущему репозиторию гитлаба 
    # - git remote set-url origin https://$GIT_USER:$GIT_PASS@$PROJECT_URL
    # # Задаём e-mail пользователя для дальнейших изменений
    # - git config --global user.email "$GIT_EMAIL_USER"
    # # Задаём имя пользователя для дальнейших изменений
    # - git config --global user.name "$GIT_USER"
  script: 
    - |
      export RELEASE_BRANCH=$(curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN_FOR_CI" "https://dpr-gitlab.otr.ru/api/v4/projects/$CI_PROJECT_ID/repository/branches" | jq '.[] | select(.id|"name") | .name' | grep release | sed 's/\"//g')
    - printenv | grep RELEASE_BRANCH
    - |
      curl --request POST --header "PRIVATE-TOKEN: $GITLAB_TOKEN_FOR_CI" --form "branch=$RELEASE_BRANCH" "https://dpr-gitlab.otr.ru/api/v4/project/$CI_PROJECT_ID/repository/commits/$CI_COMMIT_SHA/cherry_pick"	
  when: manual

# Запускаем деплой на dev-среду
deploy-dev:
  extends: .deploy
  stage: manual-deploy
  only:
    - "develop"
    - "/^release-\\w+/" 
    - "master"
  variables:
    INVENTORIES: $PATH_TO_SUBMODULE/ansible/inventories/dev/hosts
    VARIABLE_HOST: $HOST_DEV
  when: manual

# Запускаем деплой на test-среду
deploy-test:
  extends: .deploy
  stage: manual-deploy
  only:
    # - "develop"
    - "/^release-\\w+/"
    - "master"
  variables:
    INVENTORIES: $PATH_TO_SUBMODULE/ansible/inventories/test/hosts
    VARIABLE_HOST: $HOST_TEST
  when: manual

# Запускаем деплой на test2-среду
deploy-test-2:
  extends: .deploy
  stage: manual-deploy
  only:
    # - "develop"
    - "/^release-\\w+/"
    - "master"
  variables:
    INVENTORIES: $PATH_TO_SUBMODULE/ansible/inventories/test2/hosts
    VARIABLE_HOST: $HOST_TEST2
  when: manual

deploy-prom-stage:
  extends: .deploy
  stage: manual-deploy
  only:
    # - "develop"
    # - "/^release-\\w+/"
    - "master"
  variables: 
    INVENTORIES: $PATH_TO_SUBMODULE/ansible/inventories/prom-stage/hosts
    VARIABLE_HOST: $HOST_PROM_STAGE
  script:
    - ansible-playbook -i $INVENTORIES $PATH_TO_SUBMODULE/ansible/dockerless.yml --tags "${ANSIBLE_TAG}"  --extra-vars "deploy_host=$VARIABLE_HOST deploy_image=$IMAGE_TAG deploy_registry_pass=$TOKEN_FOR_DEPLOY service_name=$CI_PROJECT_NAME path_to_artifacts=$PATH_TO_ARTIFACTS"
  when: manual
