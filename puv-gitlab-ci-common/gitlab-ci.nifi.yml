stages:
  - build-project

# Собираем кэш мавена
.maven:
  image: $MAVEN_IMAGE
  tags:
    - projects_puv
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - $CI_PROJECT_DIR/.m2/repository

# Собираем проект
.build-project-tag:
  extends: .maven
  stage: build-project
  before_script:
    # Задаём переменные
    - export DATE_RELEASE=`date +%d%m%y`
    - apt-get update -y
    - apt-get install git -y
    # Подключаемся к текущему репозиторию гитлаба 
    - git remote set-url origin https://$GIT_USER:$GIT_PASS@$PROJECT_URL
    # Задаём e-mail пользователя для дальнейших изменений
    - git config --global user.email "$GIT_EMAIL_USER"
    # Задаём имя пользователя для дальнейших изменений
    - git config --global user.name "$GIT_USER"
  script:
    # Забираем последний тег, если он существует, если нет, приравниваем значение к 0
    - if git describe --tags --abbrev=0 > /dev/null; then LAST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1)); else LAST_TAG=0.0.0; fi
    # Выделяем номер последней сборки из тега и инкриментим
    - BUILD_NUMBER=$(echo $LAST_TAG |  awk -F'.' '{print $3+1}')
    # Забираем текуший номер версии из pom ( в формате <major>.<minor>)
    - version=$(mvn -f ./nifi-custom-processors/pom.xml org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)
    - pref=$(echo $version |  awk -F'.' '{print $1"."$2}')
    # Формируем новую версию в формате <major>.<minor>.<номер сборки> TODO: добавить суффикс (dev, RC или "") в зависимости от ветки
    - NEWVERSION=$(echo $pref"."$BUILD_NUMBER)
    # обновляем номер версии в pom
    - mvn -f ./nifi-custom-processors/pom.xml -U versions:set -DnewVersion=${NEWVERSION}${SUFF}
    # Собираем артефакт
    - mvn -f ./nifi-custom-processors/pom.xml clean package -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -DskipTests=true
    # Возвращаем старую версию в pom
    - mvn -f ./nifi-custom-processors/pom.xml -U versions:set -DnewVersion=${version}
    # Создаем тэг
    - git tag -a $NEWVERSION.$DATE_RELEASE.$CI_PROJECT_NAME -m "version ${NEWVERSION}.${DATE_RELEASE}.${CI_PROJECT_NAME}"
    # Пушим тэг в текущую ветку  
    - git push origin $NEWVERSION.$DATE_RELEASE.$CI_PROJECT_NAME
  artifacts:
    paths:
      - nifi-custom-processors/nifi-puv-integration-nar/target/*.nar
    when: always
    reports:
      junit:
        - nifi-custom-processors/nifi-puv-integration-processors/target/surefire-reports/TEST-*.xml
        - nifi-custom-processors/nifi-puv-integration-processors/target/failsafe-reports/TEST-*.xml

.build-project:
  extends: .maven
  stage: build-project
  before_script:
    - apt-get update -y
    - apt-get install git -y
  script:
    - mvn clean install -f ./nifi-custom-processors/pom.xml -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -DskipIntegrationTests -Duser.timezone="Europe/Moscow"

build-project-branch:
  extends: .build-project
  only:
    - merge_requests
  except:
    - "develop"
    -  "master"
    - "/^release-\\w+/"
    - "tags"

build-project-develop:
  extends: .build-project
  only:
    - "develop"
  artifacts:
    paths:
      - nifi-custom-processors/nifi-puv-integration-nar/target/*.nar
    when: always
    reports:
      junit:
        - nifi-custom-processors/nifi-puv-integration-processors/target/surefire-reports/TEST-*.xml
        - nifi-custom-processors/nifi-puv-integration-processors/target/failsafe-reports/TEST-*.xml

build-project-release:
  extends: .build-project-tag
  only:
    - "/^release-\\w+/"
  variables:
    SUFF: "-rc"

build-project-master:
  extends: .build-project-tag
  only:
    - "master"
  variables:
    SUFF: ""